---
title: "Analysis of Head and Neck Squamous Cell Carcinomas Data"
subtitle: "Group 21"
author:
  - "Asta Zeuner s203544"
  - "Astrid Ginnerup s203523"
  - "Emma Dan√∏ s203564"
  - "Andrea Kristensen s193769"
  - "Yayi Wang s243554"
html:
  embed-resources: true
execute: 
  message: false
  warning: false
format:
  revealjs:
    theme: theme.scss
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    code-block-height: 450px
editor: visual
---

## Introduction Yayi {.smaller}

-   Background
    -   Head and neck squamous cell carcinomas (HNSCC) are a group of malignancies affecting the mucosal surfaces of the head and neck.
    -   A focus on phenotype, survival data, and protein expression quantification from the GDC Hub.
-   Research Objective
    -   Apply Tidyverse techniques learned in class to real-world data.
    -   Extract and uncover scientific insights from the HNSCC datasets. ![](../results/images/head_neck.png){width="80%" height="80%"}

## Materials and methods Astrid {.smaller}

::: columns
::: {.column width="40%"}
<!-- -->

-   **Download data**

    -   Phenotype (n=604)

    -   Survival data (n=603)

    -   Protein Expression (n=354)

-   **Save data**

    -   If directory exists or not

-   Join tables

    -   inner_join

    -   pivot_longer\
:::

::: {.column width="60%"}
```{r}
#| echo: true
#| warning: false
#| code-line-numbers: "|5-16|49-55|58-67||69-71|76-78"

library("tidyverse")
library("table1")
library("here")

raw_dir <- here("data/_raw/")
data_file <- "TCGA-HNSC.protein.tsv.gz"
data_loc <- "https://gdc-hub.s3.us-east-1.amazonaws.com/download/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}

raw_dir <- here("data/_raw/")
data_file <- "TCGA-HNSC.survival.tsv.gz"
data_loc <- "https://gdc-hub.s3.us-east-1.amazonaws.com/download/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}

raw_dir <- here("data/_raw/")
data_file <- "TCGA-HNSC.clinical.tsv.gz"
data_loc <- "https://gdc-hub.s3.us-east-1.amazonaws.com/download/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}


protein_data <- read_tsv(file = here("data/_raw/TCGA-HNSC.protein.tsv.gz"))
survival_data <- read_tsv(file = here("data/_raw/TCGA-HNSC.survival.tsv.gz"))
clinical_data <- read_tsv(file = here("data/_raw/TCGA-HNSC.clinical.tsv.gz"))

meta_data <- inner_join(clinical_data, survival_data, by = c("sample" = "sample"))

data_dir <- here("data/")

write_tsv(x = meta_data, 
          file = str_c(data_dir, 
                       "01_meta_data_load.tsv.gz"))

# Pivot the peptide expression data longer
peptide_long <- protein_data |> 
                pivot_longer(cols = -1, 
                             names_to = "sample", 
                             values_to = "expression")

data_dir <- here("data/")

write_tsv( x = peptide_long,
           file = str_c(data_dir, 
                  "02_peptide_expression_load.tsv.gz"))

final_data <- inner_join(meta_data, 
                         peptide_long, 
                         by = "sample")

data_dir <- here("data/")


write_tsv( x = final_data,
           file = str_c(data_dir, 
                  "03_expression_meta_data_load.tsv.gz"))

```
:::
:::

## Cleaning and Augmenting Data Andrea {.smaller}

::: columns ::: {.column width="50%"} ::: {style="font-size: 0.6em"} ::: incremental

-   <strong>00_all</strong>:<br />

    ::: nonincremental

-   Running the whole project<br /> :::

-   <strong>01_data_load</strong>:<br />

    ::: nonincremental
    -   Loading the data<br />
    :::

-   <strong>02_data_clean</strong>:<br />

    ::: nonincremental
    -   Choosing variables of interest
    -   Trimming sample ID by removing TCGA <br />
    :::

    ::: ::: :::

::: {.column width="50%"}
::: {style="font-size: 0.6em"} ::: incremental

-   <strong>03_data_augment</strong>:<br />

<div>

```         
::: nonincremental
-   Creating patient_ID by using `mutate()`
-   Adding age interval variables <br />
:::
```

</div>
:::

-   Choose columns to work with and rename them.

-   Trim the sample_ID

-   Save clean dataset to a tsv.gz file

``` r
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  
#| code-line-numbers: "|4-20|22-29|31-33"


# Creating patient_id
expression_meta_data_aug_1 <- expression_meta_data_aug |> 
  mutate(patient_id = sub("(.*)-..", "\\1", sample_id)) |> 
  relocate(patient_id, .before = sample_id)

# Creating age group intervals
expression_meta_data_aug_2 <- expression_meta_data_aug_1 |> 
  mutate(age_interval_5_year = cut(age_at_index,
                                   breaks = seq(0, 100, by = 5),
                                   labels = paste(seq(0, 95, by = 5),
                                                  seq(5, 100, by = 5) - 1,
                                                  sep = "-"), 
                                   include.lowest = TRUE)) |> 

  relocate(age_interval_5_year, .after = age_at_index) |> # Moving the age_interval columns to after age_at_index

# Creating expression mean variable
expression_meta_data_aug_3 <- expression_meta_data_aug_2 |> 
  group_by(peptide_target) |> 
  mutate(mean_expression = mean(expression, na.rm = TRUE)) |> 
  ungroup()

# Adding alcohol consumption as binomial value
expression_meta_data_aug_5 <- expression_meta_data_aug_4 |> 
  mutate(alcohol_history_binomial = case_when(alcohol_history == "No" ~ 0,
                                              alcohol_history == "Yes" ~ 1)) |> 
  relocate(alcohol_history_binomial, .after = alcohol_history)


write_tsv( x = expression_meta_data_clean_2,
           file = str_c(data_dir, 
                  "04_expression_meta_data_clean.tsv.gz"))
```

-   Create a new variable, patient_id

``` r
expression_meta_data_aug_1 <- expression_meta_data_aug |> 
  mutate(
    patient_id = sub("(.*)-..", "\\1", sample_id)
  ) |> 
  relocate(patient_id, .before = sample_id)
```

-   Create columns with 5 and 10 years age intervals

``` r
expression_meta_data_aug_2 <- expression_meta_data_aug_1 |> 
  mutate(
    age_interval_5_year = cut(
      age_at_index,
      breaks = seq(0, 100, by = 5),
      labels = paste(seq(0, 95, by = 5), seq(5, 100, by = 5) - 1, sep = "-"), 
      include.lowest = TRUE          
    ),

    age_interval_10_year = cut(
      age_at_index,
      breaks = seq(0, 100, by = 10),
      labels = paste(seq(0, 90, by = 10), seq(10, 100, by = 10) - 1, sep = "-"), 
      include.lowest = TRUE
    )
  ) |> 
  relocate(age_interval_5_year, .after = age_at_index) |> 
  relocate(age_interval_10_year, .after = age_interval_5_year)
```

-   Create a new variable with the mean expression of each peptide_target

``` r
expression_meta_data_aug_3 <- expression_meta_data_aug_2 |> 
  group_by(peptide_target) |> 
  mutate(
    mean_expression = mean(expression, na.rm = TRUE)
  ) |> 
# Removing the grouping to ensure that the following work is not messed up
  ungroup() 
```

-   Creat mean expression of each peptide_target for each pathologic state

``` r
# Calculate the mean for each pathologic stage
mean_of_expression_pathologic_stages <- expression_meta_data_aug_3 |> 
# Exclude NA values in pathologic_stage and group by peptide_target and pathologic_state
  filter(!is.na(pathologic_stage)) |>  
  group_by(peptide_target, pathologic_stage) |> 
# Calculating the mean_expression of each pathologic state
  summarise(mean_expression = mean(expression, na.rm = TRUE), .groups = "drop") |> 
# Widening the pivot table with the new variables of calculated mean named by the pathologic_state
  pivot_wider(
    names_from = pathologic_stage,
    values_from = mean_expression,
    names_prefix = "mean_expression_"
  )

# Join the calculated means back into the original dataset with the join function
expression_meta_data_aug_4 <- expression_meta_data_aug_3 |> 
  right_join(mean_of_expression_pathologic_stages, by = "peptide_target")
```

-   Write the augmented dataset to a tsv.gz file

## Description Yayi {.smaller}

```{r}
#| echo: false

expression_meta_data_load<- read_tsv(file = here("data/03_expression_meta_data_load.tsv.gz"))

expression_meta_data_clean <- read_tsv(file = here("data/04_expression_meta_data_clean.tsv.gz"))

expression_meta_data_aug <- read_tsv(file = here("data/04_expression_meta_data_aug.tsv.gz"))
```

-   Check columns and rows (98 columns vs 26 columns, 353 patients)
-   Check Pathologic Stage (5 stages)
-   Check Patients statistics and distribution

```{r}
#| echo: false # Show the code
#| eval: false  # Execute the code

expression_meta_data_aug |>
  select(patient_id) |>
  n_distinct()
```

```{r}
#| echo: false  # Show the code
#| eval: false  # Execute the code
expression_meta_data_load |>
  select(submitter_id) |>
  n_distinct()
```

```{r}
#| echo: false  # Show the code
#| eval: false  # Execute the code

expression_meta_data_aug |> 
  group_by(pathologic_stage) |> 
  summarize(count = n(), .groups = "drop")
```

```{r}
#| echo: false  # Show the code
#| eval: true  # Execute the code

expression_meta_data_aug |> 
  summarize(
    mean_age = mean(age_at_index, na.rm = TRUE),   # Mean age
    middle_age = median(age_at_index, na.rm = TRUE) # Median age
  )
```

::: columns
::: {.column width="50%"}
![](../results/images/04_pathologic_stage_distribution.png){width="100%" height="100%"}
:::

::: {.column width="50%"}
![](../results/images/04_vital_status_age_distribution.png){width="100%" height="100%"}
:::
:::

## Analysis heatmap Andrea {.smaller}

::: columns
::: {.column width="50%"}
![](../results/images/04_pathologic_stage_distribution.png){width="100%" height="100%"}
:::

::: {.column width="50%"}
![](../results/images/04_vital_status_age_distribution.png){width="100%" height="100%"}
:::
:::

## Analysis linear model - Vital stage A and E {.smaller}

Linear model for expression of proteins present in tissue from patients with Head and Neck Cancer

Fitting a linear model to the protein expression data and the vital stage. This model is used to investigate if there is a difference in the protein expression levels in patients who is alive and patients who end up dying.

::: columns
::: {.column width="50%"}
![](images/06_analysis_lm_volcano_vital.png)
:::

::: {.column width="50%"}
![](images/06_analysis_lm_forest_plot.png)
:::
:::

## Analysis Linear model - Alcohol history A and E {.smaller}

::: columns
::: {.column width="50%"}
![](../results/images/04_pathologic_stage_distribution.png){width="100%" height="100%"}
:::

::: {.column width="50%"}
![](../results/images/04_vital_status_age_distribution.png){width="100%" height="100%"}
:::
:::

##  {.smaller}

## Analysis visual Astrid {.smaller}

::: columns
::: {.column width="50%"}
![](../results/images/04_pathologic_stage_distribution.png){width="100%" height="100%"}
:::

::: {.column width="50%"}
![](../results/images/04_vital_status_age_distribution.png){width="100%" height="100%"}
:::

##  {.smaller}
:::

## Analysis PCA A and E {.smaller}

::: columns
::: {.column width="50%"}
![](images/08_PCA_analysis_scree-01.png)
:::

::: {.column width="50%"}
![](images/08_PCA_analysis_PCA_stage.png)
:::
:::

## Discussion A and E {.smaller}
