---
title: "09_analysis_lm_alcohol"
author:
- "Asta Zeuner - s203544 - azeuner"
- "Astrid Ginnerup - s203523 - AGinnerup"
- "Emma Dan√∏ - s203564 - EDanoe"
- "Andrea Kristensen - s193769 - AndreaMTK"
- "Yayi Wang - s243554 - Yayi0117"
html: 
    embed-resources: true
execute: 
  message: FALSE
  warning: FALSE
---

## Load libraries

```{r}
#| label: "load-libraries-09"
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  

library("tidyverse")
library("broom")
library("ggthemes")
library("ggrepel")
library("here")

```

## Loading data

```{r}
#| label: "load-data-09" 

expression_meta_data_aug <- read_tsv(file = here("data/03_expression_meta_data_aug.tsv.gz"))

```

# Linear model: alcohol history

## Selecting variables, grouping and nesting the data for the linear modelling

Want to make a linear model of the peptide expression levels and if the patient is a smoker or non-smoker

Selecting the variables that we want to use for the linear modeling. NA's in "expression" are dropped.

```{r}
#| label: "selecting-variables-for-linear-modeling-09"

expression_meta_data_lm_alcohol <- expression_meta_data_aug |> 
  select(alcohol_history_binomial, 
         peptide_target,
         expression) |> 
   drop_na(expression)

expression_meta_data_lm_alcohol 
```

Grouping the data by peptide_target and nesting the data so that each peptide_target gets a dataframe that contains the overall survival and the protein expression for the patients.

```{r}
#| label: "grouping-and-nesting-data"

expression_meta_data_lm_alcohol_nested <- expression_meta_data_lm_alcohol |> 
  group_by(peptide_target) |> 
  nest() 

expression_meta_data_lm_alcohol_nested
```

## Adding the linear model to the dataset

Adding the linear model to the data using mutate().

```{r}
#| label: "linear-model-to-the-data-09"

expression_meta_data_lm_alcohol_nested_model <- expression_meta_data_lm_alcohol_nested |> 
  mutate(model_object = map(.x = data,
                            .f = ~lm(formula = expression ~ alcohol_history_binomial,
                                   data = .x)))

expression_meta_data_lm_alcohol_nested_model
```

Computing the confidence intervals and p-value using tidy()

```{r}
#| label: "computing-CI-using-tidy-09"

expression_meta_data_lm_alcohol_nested_model_tidy <- expression_meta_data_lm_alcohol_nested_model |> 
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~ tidy(conf.int = TRUE,
                                             conf.level = 0.95,
                                             x =.x)))

expression_meta_data_lm_alcohol_nested_model_tidy
```

## Wrangling the expression data estimates

```{r}
#| label: "unnest-data-09"

expression_meta_data_lm_alcohol_estimates <- expression_meta_data_lm_alcohol_nested_model_tidy |>
  unnest(model_object_tidy)

expression_meta_data_lm_alcohol_estimates

```

## Clean the data and calculating q.value

Term describes if the patient drinks alcohol. 0 = no and 1 = yes. Therefore the intercept the patient does not drink alcohol and the slope + intercept the patient does drink alcohol. **Is this correct??? Explain better???**

```{r}
#| label: "filtering-and-selecting-09"

expression_meta_data_lm_alcohol_estimates_clean <- expression_meta_data_lm_alcohol_estimates |> 
  filter(term == "alcohol_history_binomial") |> 
  select(peptide_target,
         p.value,
         estimate,
         conf.low,
         conf.high) |> 
  ungroup(peptide_target)

expression_meta_data_lm_alcohol_estimates_clean
```

Adding the adjusted p-value in a new variable, q.value, and add extra variable that tells if the q-value is significant or not with alpha = 5%

```{r}
#| label: "mutate-is.significant-09"

expression_meta_data_lm_alcohol_estimates_clean <- expression_meta_data_lm_alcohol_estimates_clean |> 
  mutate(q.value = p.adjust(p = p.value),
         is_significant = case_when(q.value > 0.05 ~ "no",
                                    q.value <= 0.05 ~ "yes"),
         label = case_when(is_significant == "yes" ~ peptide_target,
                           is_significant == "no" ~ ""))

expression_meta_data_lm_alcohol_estimates_clean
```

```{r}
#| label: "filter-for-significant-proteins-09"

expression_meta_data_lm_alcohol_estimates_clean |>  
  filter(is_significant == "yes")


```

We have 1 protein where the expression levels are found to be significantly different between patients that drink alcohol and patients that does not.

## Volcano plot

```{r}
#| label: "volcano-plot-09"
#| fig-width: 8
#| fig-height: 5


volcano_plot_alcohol <- expression_meta_data_lm_alcohol_estimates_clean |>
  ggplot(mapping = aes(x = estimate,
                       y = -log10(p.value),
                       color = is_significant)) +
  geom_point(alpha = 0.5) +
  scale_color_manual(values = c("yes" =  "#2bd11f", 
                                "no" ="#eb4cbe")) +
  geom_label_repel(aes(label = label),
                   size = 4,
                   max.overlaps = 25) +
  labs(title = "Peptides associated with alcohol history of Head and Neck patients",
       subtitle = "Peptides with a label were significant after multiple testing correction",
       x = "Estimates",
       y = "-log10(p)") +
  theme_minimal(base_size = 12) +
  theme(plot.title = element_text(hjust = 0),
        plot.subtitle = element_text(hjust = 0),
        legend.position = "none") 

volcano_plot_alcohol

ggsave(filename = "06_analysis_lm_volcano_alcohol.png",
       plot = volcano_plot_alcohol, 
       device = "png",
       path = "../results/images")


```
