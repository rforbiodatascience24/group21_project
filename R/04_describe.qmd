---
title: "04_describe"
author: 
  - "Asta Zeuner - s203544 - azeuner"
  - "Astrid Ginnerup - s203523 - AGinnerup"
  - "Emma Dan√∏ - s203564 - EDanoe"
  - "Andrea Kristensen - s193769 - AndreaMTK"
  - "Yayi Wang - s243554 - Yayi0117"
format: 
  html: 
    embed-resources: true
editor: visual
execute: 
  message: false
  warning: false
---

hello

## Load Library

```{r}
#| label: "load-libraries" 
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  

library("tidyverse")
library("table1")
library("here")
```

## Loading the data

```{r}
#| label: "load-data" 

expression_meta_data_load<- read_tsv(file = here("data/03_expression_meta_data_load.tsv.gz"))

expression_meta_data_aug <- read_tsv(file = here("data/04_expression_meta_data_aug.tsv.gz"))
```

## Description

First of all, check tables before and after cleaning and augmentation. We can see that the columns changed.

```{r}
columns_before <- expression_meta_data_load |> ncol()
columns_after <- expression_meta_data_aug |> ncol()

columns_before
columns_after
```

After cleaning and augmentation, we have 26 columns to analyze:

```{r}
columns_names_after <- expression_meta_data_aug |> colnames()

columns_names_after
```

We can see that patient numbers didn't change from the following code.

```{r}
n_patient_before <- expression_meta_data_load |>
  select(submitter_id) |>
  n_distinct()

n_patient_after <- expression_meta_data_aug |>
  select(patient_id) |>
  n_distinct()


n_patient_before
n_patient_after
```

Check the different pathologic stages and how patients are distributed among these groups.

```{r}
pathologic_stage_distribution <- expression_meta_data_aug |> 
  mutate(pathologic_stage = replace_na(pathologic_stage, "Not Reported")) |> 
  group_by(pathologic_stage) |> 
  summarize(n_patients = n_distinct(patient_id)) |>
  
  ggplot(aes(x = pathologic_stage, 
             y = n_patients, 
             fill = pathologic_stage)) +
  geom_bar(stat = "identity", 
           alpha = 0.8) +
  labs(title = "Patients Number Distribution by Pathologic Stage",
       x = "Pathologic Stage",
       y = "Patient Number") +
  theme_minimal() +
  theme(legend.position = "none") +
  scale_fill_manual(values = c(
    "Not Reported" = "#eb4cbe", 
    "Stage I" = "#2d0ef5", 
    "Stage II" = "#2bd11f", 
    "Stage III" = "#beeb4c", 
    "Stage IVA" = "#f5910e", 
    "Stage IVB" = "#d11f2b"
  ))

pathologic_stage_distribution

ggsave(filename = "04_pathologic_stage_distribution.png",
       plot = pathologic_stage_distribution, 
       device = "png",
       path = "../results/images")

```

Check the mean and middle values of patients' age.

```{r}
expression_meta_data_aug |> 
  summarize(
    mean_age = mean(age_at_index, na.rm = TRUE),   # Mean age
    middle_age = median(age_at_index, na.rm = TRUE) # Median age
  )
```

Check the age distribution of patients and stratified on vital_status

```{r}
vital_status_age_distribution <- expression_meta_data_aug |> 
  group_by(vital_status, 
           age_interval_5_year) |>
  summarize(n = n_distinct(patient_id),
            .groups = "drop") |> # Drop grouping
  complete(age_interval_5_year, 
           vital_status, 
           fill = list(n = 0)) |> # Fill missing combinations
  
  ggplot(aes(x = age_interval_5_year, y = n, fill = vital_status)) +
  geom_bar(stat = "identity", position = "dodge",alpha = 0.8) +
  scale_fill_manual(values = c("Alive" = "#eb4cbe", "Dead" = "#beeb4e")) +
  labs(
    title = "Count of Patients by Age, Stratified by Vital Status",
    x = "Age",
    y = "Count",
    fill = "Vital Status"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom")

vital_status_age_distribution

ggsave(filename = "04_vital_status_age_distribution.png",
       plot = vital_status_age_distribution, 
       device = "png",
       path = "../results/images")


```

Check how many peptides we have

```{r}
n_peptides <- expression_meta_data_aug |>
  select(peptide_target) |>
  n_distinct()

n_peptides
```
