---
title: "04_describe"
author:
- "Asta Zeuner - s203544 - azeuner"
- "Astrid Ginnerup - s203523 - AGinnerup"
- "Emma Dan√∏ - s203564 - EDanoe"
- "Andrea Kristensen - s193769 - AndreaMTK"
- "Yayi Wang - s243554 - Yayi0117"
html: 
    embed-resources: true
execute: 
  message: FALSE
  warning: FALSE
---

## Load Library

```{r}
#| label: "load-libraries" 
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  

library("tidyverse")
library("table1")
library("here")
library("ggrepel")
```

## Loading the data

```{r}
#| label: "load-data" 

expression_meta_data_load<- read_tsv(file = here("data/03_expression_meta_data_load.tsv.gz"))

expression_meta_data_aug <- read_tsv(file = here("data/04_expression_meta_data_aug.tsv.gz"))
```

## Description

First of all, check tables before and after cleaning and augmentation. We can see that the columns changed.

```{r}
columns_before <- expression_meta_data_load |> ncol()
columns_after <- expression_meta_data_aug |> ncol()

columns_before
columns_after
```

After cleaning and augmentation, we have 25 columns to analyze:

```{r}
columns_names_after <- expression_meta_data_aug |> colnames()

columns_names_after
```

We can see that patient numbers didn't change from the following code.

```{r}
n_patient_before <- expression_meta_data_load |>
  select(submitter_id) |>
  n_distinct()

n_patient_after <- expression_meta_data_aug |>
  select(patient_id) |>
  n_distinct()


n_patient_before
n_patient_after
```

Check the different pathologic stages and how patients are distributed among these groups.

```{r}
expression_meta_data_aug |> 
  mutate(pathologic_stage = replace_na(pathologic_stage, "Not Reported")) |> 
  group_by(pathologic_stage) |> 
  summarize(n_patients = n_distinct(patient_id)) |>
  mutate(percentage = n_patients / sum(n_patients) * 100) |>
  
  ggplot(aes(x = "", y = n_patients, fill = pathologic_stage)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text_repel(aes(label = paste0(round(percentage, 1), "%")),
                  position = position_stack(vjust = 0.5),
                  box.padding = 0.3, # Padding around the text box
                  direction = "y", # Ensure vertical alignment
                  show.legend = FALSE) +
  coord_polar(theta = "y") +
  labs(title = "Distribution of Patients by Pathologic Stage",
       x = NULL, y = NULL) +
  theme_void() +
  scale_fill_brewer(palette = "Set3", name = "Pathologic Stage")
```

Check the lowest and highest patient age.

```{r}
expression_meta_data_aug |> 
  summarize(
    min_age = min(age_at_index, na.rm = TRUE), # Lowest age
    max_age = max(age_at_index, na.rm = TRUE)  # Highest age
  )
```

Check the age distribution of patients and stratified on vital_status

```{r}
expression_meta_data_aug |> 
  group_by(vital_status, 
           age_interval_5_year) |>
  summarize(n = n_distinct(patient_id),
            .groups = "drop") |> # Drop grouping
  complete(age_interval_5_year, 
           vital_status, 
           fill = list(n = 0)) |> # Fill missing combinations
  
  ggplot(aes(x = age_interval_5_year, 
             y = n, 
             fill = vital_status)) +
  geom_bar(stat = "identity",
           position = "dodge") +
  labs(
    title = "Count of Patients by Age, Stratified by Vital Status",
    x = "Age",
    y = "Count",
    fill = "Vital Status"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

Check how many peptides we have

```{r}
n_peptides <- expression_meta_data_aug |>
  select(peptide_target) |>
  n_distinct()

n_peptides
```
