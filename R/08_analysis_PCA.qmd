---
title: "08_analysis_4"
author: 
  - "Asta Zeuner - s203544 - azeuner"
  - "Astrid Ginnerup - s203523 - AGinnerup"
  - "Emma Dan√∏ - s203564 - EDanoe"
  - "Andrea Kristensen - s193769 - AndreaMTK"
  - "Yayi Wang - s243554 - Yayi0117"
format: 
  html: 
    embed-resources: true
editor: visual
execute: 
  message: false
  warning: false
---

## Load libraries

```{r}
#| label: "load-libraries-08"
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  

library("tidyverse")
library("broom")
library("here")

```

## Loading data

```{r}
#| label: "load-data-08" 

expression_meta_data_aug <- read_tsv(file = here("data/03_expression_meta_data_aug.tsv.gz"))

protein_data <- read_tsv(file = here("data/_raw/TCGA-HNSC.protein.tsv.gz"))

meta_data <-  read_tsv(file = here("data/01_meta_data_load.tsv.gz"))

```

## Principle component coordinates

Transposing the dataframe so the data is in the format for doing a PCA on the proteins. This is done using pivot_longer() and pivot_wider(). NA's are dropped.

```{r}
#| label: "transposing-protein-expression-dataframe-08" 

protein_data_trans <- protein_data |> 
  drop_na() |> 
  pivot_longer(col = -1,
               names_to = "sample",
               values_to = "expression") |> 
  pivot_wider(names_from = peptide_target,
              values_from = expression)

protein_data_trans
 
```

Selecting numeric values in the data for computing the PCA analysis. NA's are dropped.

```{r}
#| label: "PCA-08" 
pca_analysis <- protein_data_trans |> 
  select_if(is.numeric) |> 
  drop_na() |> 
  prcomp(center = TRUE,
         scale = TRUE )
  
```

## Scree plot

Making a scree plot using the eigenvalues using the tidy() function. The plot is saved using ggsave().

```{r}
#| label: "scree-plot-08" 
#| fig-width: 7
#| fig-height: 4


scree_plot <- pca_analysis |>
  tidy("eigenvalues") |> 
  mutate(percent = percent * 100) |> 
  ggplot(aes(x = PC,
             y = percent)) +
  geom_hline(yintercept = 0) +
  geom_col(colour = "#f5910e",
           alpha = 0.5) +
  theme_minimal() +
  theme(panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank()) +
  labs(title = "Scree Plot of PCA of Protein Expression",
       subtitle = "Protein Expression in Tissue from Head and Neck Cancer Patients",
       x = "Principle Component (PC)",
       y = "Percent")

scree_plot

ggsave(filename = "08_PCA_analysis_scree.png",
       plot = scree_plot, 
       device = "png",
       path = "../results/images")
```

From the scree plot it can be observed that a few of the proteins have a much higher percent variance compared to the rest of the proteins. Therefore further analysis are conducted.

## Adding the meta data to the PCA analysis

Joining the data frame used in the PCA with the meta_data, to be able to color based on vital status and pathological stage. We are using left join, as we only want the meta data for the patients that we have in our PCA.

```{r}
#| label: "joining-portein-expression-with-meta-data-08" 

protein_data_trans_metadata <- protein_data_trans |> 
  left_join(y = meta_data, 
            join_by(sample == sample)) 
```

Adding the metadata to the PC Analysis

```{r}
#| label: "augmenting-metadata-to-PCA-data-08" 

pca_analysis_aug <-  pca_analysis |> 
  augment(protein_data_trans_metadata)
```

Creating labels for the PCA plot, containing the variance percentage. The value is computed using tidy().

```{r}
#| label: "adding-variance-percentage-to-the-labels-08" 

pca_axis_labels <- pca_analysis |> 
  tidy("eigenvalues") |> 
  mutate(label = str_c("PC", PC, ", VE = ", round(percent*100,2), "%")) |> 
  pull("label")
```

## PCA plot

Plotting the PCA plot using PC1 and PC2 for the x and y axis respectively.

```{r}
#| label: "PCA-plot-vital-status-08" 
#| fig-width: 7
#| fig-height: 4


pca_plot_vital <- pca_analysis_aug |> 
  ggplot(aes(x = .fittedPC1, 
             y = .fittedPC2, 
             color = vital_status.demographic)) + 
  geom_point() +
  scale_color_manual(values = c("Alive"= "#2d0ef5", 
                                "Dead" = "#f5910e")) +
  labs(x = pluck(pca_axis_labels,1),
       y = pluck(pca_axis_labels,2),
       title = "PC Analysis of Protein Expression" ,
       subtitle = "Protein Expression in Tissue from Head and Neck Cancer Patients",
       color = "Vital status") 

ggsave(filename = "08_PCA_analysis_PCA_vital.png",
       plot = pca_plot_vital, 
       device = "png",
       path = "../results/images")

pca_plot_vital
```

```{r}
#| label: "PCA-plot-pathological-stage-08" 
#| fig-width: 7
#| fig-height: 4

pca_plot_stage <- pca_analysis_aug |> 
  ggplot(aes(x = .fittedPC1, 
             y = .fittedPC2, 
             color = ajcc_pathologic_stage.diagnoses)) + 
  geom_point() +
   scale_color_manual(values = c("Stage I"= "#2d0ef5", 
                                 "Stage II" = "#f5910e",
                                 "Stage III" = "#2bd11f",
                                "Stage IVA" = "#eb4cbe",
                                "Stage IVB" = "#beeb4c")) +
  labs(x = pluck(pca_axis_labels,1),
       y = pluck(pca_axis_labels,2),
       title = "PC Analysis of Protein Expression" ,
       subtitle = "Protein Expression in Tissue from Head and Neck Cancer Patients",
       color = "Pathological stage") 

ggsave(filename = "08_PCA_analysis_PCA_stage.png",
       plot = pca_plot_stage, 
       device = "png",
       path = "../results/images")

pca_plot_stage
```

## Rotation matrix

```{r}
#| label: "View-rotation-matrix-tibble-08"

pca_analysis |> 
  tidy(matrix = "rotation")
```

```{r}
#| label: "rotation-matrix-08"
#| fig-width: 7
#| fig-height: 7

arrow_style <- arrow(length = unit(0.03, "npc"),
                     ends = "first")

rotation_matrix <- pca_analysis |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", 
              names_prefix = "PC",
              values_from = "value") |> 
  ggplot(aes(x = PC1,
             y = PC2)) +
  geom_segment( xend = 0, 
                yend = 0, 
                arrow = arrow_style, 
                color = "#2bd11f") +
  coord_fixed() + 
  theme_minimal() + 
  labs(x = pluck(pca_axis_labels,1),
       y = pluck(pca_axis_labels,2),
       title = "Rotation Matrix of PC Analysis of Protein Expression" ,
       subtitle = "Protein Expression in Tissue from Head and Neck Cancer Patients")

rotation_matrix

ggsave(filename = "08_PCA_analysis_RM.png",
       plot = rotation_matrix, 
       device = "png",
       path = "../results/images")
  
```
