---
title: "02_clean"
author: 
  - "Asta Zeuner - s203544 - azeuner"
  - "Astrid Ginnerup - s203523 - AGinnerup"
  - "Emma Dan√∏ - s203564 - EDanoe"
  - "Andrea Kristensen - s193769 - AndreaMTK"
  - "Yayi Wang - s243554 - Yayi0117"
format: 
  html: 
    embed-resources: true
editor: visual
execute: 
  message: false
  warning: false
---

## Load libraries

```{r}
#| label: "load-libraries-02" 
#| echo: TRUE
#| eval: TRUE 
#| output: FALSE  

library("tidyverse")
library("table1")
library("here")
```

## Load dataset

Loading the dataset into an object.

```{r}
#| label: "load-data-02" 

expression_meta_data_clean <- read_tsv(file = here("data/01_expression_meta_data_load.tsv.gz"))

```

## Cleaning the data

To clean the dataset, we select the variables we want to work with and assign new names to the variables so they follow snake_case. Additionally we use the select to relocate the variables in the order we want them. \
The cleaned dataset is assigned to a new object.

```{r}
#| label: "choosing-variables-and-assigning-new-names-02"

expression_meta_data_clean <- expression_meta_data_clean |> 
  select(sample_id = sample,
         gender = gender.demographic,
         race = race.demographic,
         vital_status = vital_status.demographic,
         overall_survival = OS,
         primary_site,
         pathologic_stage = ajcc_pathologic_stage.diagnoses,
         age_at_index = age_at_index.demographic,
         year_of_birth = year_of_birth.demographic,
         year_of_death = year_of_death.demographic,
         tissue_source_location = name.tissue_source_site,
         cigarettes_per_day = cigarettes_per_day.exposures,
         years_smoked = years_smoked.exposures,
         alcohol_history = alcohol_history.exposures,
         peptide_target,
         expression)

```

Then we trim the sample_ID to not contain the code TCGA standing for The Cancer Genome Atlas, as all the values comes from this data and has this code in the beginning.

```{r}
#| label: "modify-sample-id-02"

expression_meta_data_clean <- expression_meta_data_clean |> 
  mutate(sample_id = sub("^TCGA-(.*)", "\\1", sample_id))

```

## Write the clean dataset to a tsv.gz file

The clean dataset is saved as a .tsv.gz file in data folder and will be the dataset used for augmenting the data.

```{r}
#| label: "write-clean-data-to-tsv-gz-02"

data_dir <- here("data/")

write_tsv( x = expression_meta_data_clean,
           file = str_c(data_dir, 
                  "02_expression_meta_data_clean.tsv.gz"))

```
